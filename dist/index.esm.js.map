{"version":3,"file":"index.esm.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react';\n\nconst forcedReducer = state => state + 1;\n\nconst CONTEXT_LISTENERS = Symbol('C_L');\n\nconst createProvider = (OrigProvider, listeners) => React.memo(({ value, children }) => {\n  // we call listeners in render intentionally.\n  // listeners are not technically pure, but\n  // otherwise we can't get benefits from concurrent mode.\n  // we make sure to work with double or more invocation of listeners.\n  listeners.forEach((listener) => {\n    listener(value);\n  });\n  return React.createElement(OrigProvider, { value }, children);\n});\n\n/**\n * This create a special context for `useContextSelector`.\n * @param {*} defaultValue\n * @returns {React.Context}\n * @example\n * const PersonContext = createContext({ firstName: '', familyName: '' });\n */\nexport const createContext = (defaultValue) => {\n  // make changedBits always zero\n  const context = React.createContext(defaultValue, () => 0);\n  // shared listeners (not ideal)\n  context[CONTEXT_LISTENERS] = new Set();\n  // hacked provider\n  context.Provider = createProvider(context.Provider, context[CONTEXT_LISTENERS]);\n  // no support for consumer\n  delete context.Consumer;\n  return context;\n};\n\n/**\n * This hook returns context selected value by selector.\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referencially changed.\n * @param {React.Context} context\n * @param {Function} selector\n * @returns {*}\n * @example\n * const firstName = useContextSelector(PersonContext, state => state.firstName);\n */\nexport const useContextSelector = (context, selector) => {\n  const listeners = context[CONTEXT_LISTENERS];\n  if (!listeners) {\n    throw new Error('useContextSelector requires special context');\n  }\n  const [, forceUpdate] = React.useReducer(forcedReducer, 0);\n  const value = React.useContext(context);\n  const selected = selector(value);\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    ref.current = {\n      f: selector, // last selector \"f\"unction\n      v: value, // last \"v\"alue\n      s: selected, // last \"s\"elected value\n    };\n  });\n  React.useLayoutEffect(() => {\n    const callback = (nextValue) => {\n      try {\n        if (ref.current.v === nextValue\n          || Object.is(ref.current.s, ref.current.f(nextValue))) {\n          return;\n        }\n      } catch (e) {\n        // ignored (stale props or some other reason)\n      }\n      forceUpdate();\n    };\n    listeners.add(callback);\n    return () => {\n      listeners.delete(callback);\n    };\n  }, [listeners]);\n  return selected;\n};\n\n/**\n * This hook returns the entire context value.\n * Use this instead of React.useContext for consistent behavior.\n * @param {React.Context} context\n * @returns {*}\n * @example\n * const person = useContext(PersonContext);\n */\n// this is not best implemented for performance,\n// but this wouldn't be used very often.\nexport const useContext = context => useContextSelector(context, x => x);\n"],"names":["forcedReducer","state","CONTEXT_LISTENERS","Symbol","createContext","defaultValue","OrigProvider","listeners","context","React","Set","Provider","memo","value","children","forEach","listener","createElement","Consumer","useContextSelector","selector","Error","forceUpdate","useReducer","useContext","selected","ref","useRef","useLayoutEffect","current","f","v","s","callback","nextValue","Object","is","e","add","delete","x"],"mappings":"qBAEA,IAAMA,EAAgB,SAAAC,UAASA,EAAQ,GAEjCC,EAAoBC,OAAO,OAoBpBC,EAAgB,SAACC,GAE5B,IApBsBC,EAAcC,EAoB9BC,EAAUC,EAAML,cAAcC,EAAc,sBAOlD,OALAG,EAAQN,GAAqB,IAAIQ,IAEjCF,EAAQG,UAxBcL,EAwBYE,EAAQG,SAxBNJ,EAwBgBC,EAAQN,GAxBVO,EAAMG,KAAK,gBAAGC,IAAAA,MAAOC,IAAAA,SAQvE,OAHAP,EAAUQ,QAAQ,SAACC,GACjBA,EAASH,KAEJJ,EAAMQ,cAAcX,EAAc,CAAEO,MAAAA,GAASC,aAkB7CN,EAAQU,SACRV,GAaIW,EAAqB,SAACX,EAASY,GAC1C,IAAMb,EAAYC,EAAQN,GAC1B,IAAKK,EACH,UAAUc,MAAM,+CAHqC,IAK9CC,EAAeb,EAAMc,WAAWvB,EAAe,MAClDa,EAAQJ,EAAMe,WAAWhB,GACzBiB,EAAWL,EAASP,GACpBa,EAAMjB,EAAMkB,OAAO,MAyBzB,OAxBAlB,EAAMmB,gBAAgB,WACpBF,EAAIG,QAAU,CACZC,EAAGV,EACHW,EAAGlB,EACHmB,EAAGP,KAGPhB,EAAMmB,gBAAgB,WACpB,IAAMK,EAAW,SAACC,GAChB,IACE,GAAIR,EAAIG,QAAQE,IAAMG,GACjBC,OAAOC,GAAGV,EAAIG,QAAQG,EAAGN,EAAIG,QAAQC,EAAEI,IAC1C,OAEF,MAAOG,IAGTf,KAGF,OADAf,EAAU+B,IAAIL,cAEZ1B,EAAUgC,OAAON,KAElB,CAAC1B,IACGkB,GAaID,EAAa,SAAAhB,UAAWW,EAAmBX,EAAS,SAAAgC,UAAKA"}